'''
문제
-2진법은 부호 없는 2진수로 표현이 된다.
2진법에서는 20, 21, 22, 23이 표현 되지만 -2진법에서는
(-2)0 = 1, (-2)1 = -2, (-2)2 = 4, (-2)3 = -8을 표현한다.
10진수로 1부터 표현하자면 1, 110, 111, 100, 101, 11010, 11011, 11000, 11001 등이다.

10진법의 수를 입력 받아서 -2진수를 출력하는 프로그램을 작성하시오.

입력
첫 줄에 10진법으로 표현된 수 N이 주어진다.

출력
-2진법 수를 출력한다.

제한
-2,000,000,000 ≤ N ≤ 2,000,000,000
예제 입력 1 
-13
예제 출력 1 
110111
'''
# 자릿수가 나타내는게 1, -2, 4, -8.. 어렵다.
# 일의자리는 2로 나눈 나머지.
# 두 자리씩 합쳐서 생각해야 하겠다.     4진법?  그냥 2진법?  -2진법?
#  1은 1                            1       1           1
#  2는 4 - 2                        2       10          110
#  4는 4                            10      100         100
#  6은 16 - 8 - 2                   12      110         11010
#  8은 16 - 8                       20      1000        11000
# 10은 16 - 8 + 4 - 2               22      1010        11110
# 12는 16 - 8 + 4                   30      1100        11100
# 14는 16 - 2                       32      1110        10010
# 16은 16                           100     10000       10000
# 18은 16 + 4 - 2                   102     10010       10110
# 20은 16 + 4                       110     10100       10100
# 22는 64 - 32 - 8 - 2              112     10110       1101010
# 24는 64 - 32 - 8                  120     11000       1101000
# 26은 64 - 32 - 8 + 4 - 2          122
# 28은 64 - 32 - 8 + 4              130
# 30은 64 - 32 - 2                  132
# 32는 64 - 32                      200
# 34는 64 - 32 + 4 - 2
# 36은 64 - 32 + 4
# 38은 64 - 32 + 16 - 8 - 2
# 40은 64 - 32 + 16 - 8
# 일단 홀수는 다 제하고 생각해도 될듯.
# 뭔가 규칙이 보이는 듯하다.

# 기본적으로 10진수를 n진수로 변환하는 코드를 이용한다.
# 다만 나머지가 음수일 경우를 따로 보정해 준다.

import sys
input = sys.stdin.readline

num = int(input())

if num == 0: # 0일 때는 answer가 비어있다.
    print(0)

else:
    answer = []
    while num != 0:
        R = num % -2
        if R < 0:  # 나머지가 음수일 경우, 0 또는 1이 되도록 보정
            R += 2  # R을 +2 보정하여 양수로 만들고
            num = num // -2 + 1  # 나머지 보정만큼 몫도 +1로 보정
            # 원리: N = (-2)Q + R → N = (-2)(Q+1) + (R+2)
        else:
            num //= -2
        answer.append(R)
    print("".join(map(str, answer[::-1])))

# 이건 나중에 다시 풀어봐야겠다. 이런식으로 푸는구나.