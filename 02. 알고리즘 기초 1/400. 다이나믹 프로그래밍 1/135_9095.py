'''
문제
정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다.
합을 나타낼 때는 수를 1개 이상 사용해야 한다.

1+1+1+1
1+1+2
1+2+1
2+1+1
2+2
1+3
3+1
정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 테스트 케이스의 개수 T가 주어진다.
각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다.
n은 양수이며 11보다 작다.

출력
각 테스트 케이스마다, n을 1, 2, 3의 합으로 나타내는 방법의 수를 출력한다.

예제 입력 1 
3
4
7
10
예제 출력 1 
7
44
274
'''

# dp[i]는 i를 1,2,3의 합으로 나타내는 방법의 수라 하면
# dp[1] = 1
# dp[2] = 2
# dp[3] = 4
# dp[4] = 7
# dp[5] = 13
# dp[6] = 24
# dp[7] = 44
# 좀 머리가 아픈데. 규칙은 찾았다.
# 점화식은 dp[i] = dp[i-1] + dp[i-2] + dp[i-3]이다.
# 근데 이게 왜 성립하는지를 모르겠다. 왜? 왜 됨? 원리를 몰라.
# 직접 해보니까 뭐 일단 성립하긴 하니까. 안하면 손해지.

# 좀 더 생각해보니 답이 나온다.
# 1,2,3으로 끝날 수 있잖는가? 각각 생각해보면 한칸 두칸 세칸씩 먹는거지
# 그럼 남은 수수의 경우의수 계산은 i-1 i-2 i-3이 되는것이다.

import sys
input = sys.stdin.readline

test = int(input())

dp = [0] * 11
dp[1], dp[2], dp[3] = 1, 2, 4

for i in range(4, 11):
    dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3]

for _ in range(test):
    print(dp[int(input())])

# 공간 최적화
'''
import sys
input = sys.stdin.readline

test = int(input())

for _ in range(test):
    num = int(input())
    if num <= 3:
        print([0, 1, 2, 4][num])
    else:
        a, b, c = 1,2,4
        for i in range(4, num + 1):
            a, b, c = b, c, a + b + c
        print(c)
'''