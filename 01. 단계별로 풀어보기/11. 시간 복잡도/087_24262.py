'''
문제
오늘도 서준이는 알고리즘의 수행시간 수업 조교를 하고 있다.
아빠가 수업한 내용을 학생들이 잘 이해했는지 문제를 통해서 확인해보자.

입력의 크기 n이 주어지면 MenOfPassion 알고리즘 수행 시간을 예제 출력과 같은 방식으로 출력해보자.

MenOfPassion 알고리즘은 다음과 같다.

MenOfPassion(A[], n) {
    i = ⌊n / 2⌋;
    return A[i]; # 코드1
}
입력
첫째 줄에 입력의 크기 n(1 ≤ n ≤ 500,000)이 주어진다.

출력
첫째 줄에 코드1 의 수행 횟수를 출력한다.

둘째 줄에 코드1의 수행 횟수를 다항식으로 나타내었을 때, 최고차항의 차수를 출력한다.
단, 다항식으로 나타낼 수 없거나 최고차항의 차수가 3보다 크면 4를 출력한다.

예제 입력 1 
1
예제 출력 1 
1
0
코드1 이 1회 수행되고 알고리즘은 상수 시간이 소요된다.
'''

# 저 코드는 의사코드라는 건데.. 코드의 공용어 같은 것이다.
# 의미는 그냥 i // 2 를 return 하는 간단한 코드.

# n으로 어떤 값이 들어오든, 수행하는 횟수는 같다.
# 그렇기 때문에 시간복잡도는 O(1) 이다.
# 입력 값에 상관없이 수행하는 데 걸리는 시간이 같다.

# 둘째 줄에 알고리즘의 수행 시간이 상수 시간이 소요되면 0, n에 비례하면 1,
# n^2에 비례하면 2, n^3에 비례하면 3, n^3보다 큰 시간에 비례하면 4를 출력한다.

# 정확하진 않아도, 대충 이런 느낌인 것이다.
# time_complexity.md 파일을 잘 읽어보자.

size = int(input())

count = 1 # 저 코드는 어떤 size가 들어와도 한번만 수행된다.

degree = 0 # degree는 차수를 의미한다.
# 시간복잡도가 O(1)이다. 정수이므로 차수는 0이다.

print(count)
print(degree)

# print("1\n0") 결국 이거긴 하다.