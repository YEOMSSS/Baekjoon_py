'''
문제
오늘도 서준이는 점근적 표기 수업 조교를 하고 있다. 아빠가 수업한 내용을 학생들이 잘 이해했는지 문제를 통해서 확인해보자.

알고리즘의 소요 시간을 나타내는 O-표기법(빅-오)을 다음과 같이 정의하자.

O(g(n)) = {f(n) | 모든 n ≥ n0에 대하여 f(n) ≤ c × g(n)인 양의 상수 c와 n0가 존재한다}

이 정의는 실제 O-표기법(https://en.wikipedia.org/wiki/Big_O_notation)과 다를 수 있다.

함수 f(n) = a1n + a0, 양의 정수 c, n0가 주어질 경우 O(n) 정의를 만족하는지 알아보자.

입력
첫째 줄에 함수 f(n)을 나타내는 정수 a1, a0가 주어진다. (0 ≤ |ai| ≤ 100)

다음 줄에 양의 정수 c가 주어진다. (1 ≤ c ≤ 100)

다음 줄에 양의 정수 n0가 주어진다. (1 ≤ n0 ≤ 100)

출력
f(n), c, n0가 O(n) 정의를 만족하면 1, 아니면 0을 출력한다.

예제 입력 1 
7 7
8
1
예제 출력 1 
0
f(n) = 7n + 7, g(n) = n, c = 8, n0 = 1이다. f(1) = 14, c × g(1) = 8이므로 O(n) 정의를 만족하지 못한다.

예제 입력 2 
7 7
8
10
예제 출력 2 
1
f(n) = 7n + 7, g(n) = n, c = 8, n0 = 10이다. 모든 n ≥ 10에 대하여 7n + 7 ≤ 8n 이므로 O(n) 정의를 만족한다.
'''
'''
# 함수 f(n) = a1n + a0, 양의 정수 c, n0가 주어질 경우 O(n) 정의를 만족하는지 알아보자.
# g(n) = n 이다. n >= n0 일때 a1 * n + a0 <= c * n 인지를 판정하면 된다.

a1, a0 = map(int, input().split())
c = int(input())
n0 = int(input())

# for n in range(n0, inf):
#     a1 * n + a0 <= c * n
# 반복문에 break 없이 무한대가 들어간다는거 이상하잖아..
# 뭔가 조건이 있을 거야.

# if a1 > c: # 이건 else에 포함됨.
#     print(0)
# if a1 == c and a0 == 0: # 이건 아래 조건에 포함됨.
#     print(1)
if a1 * n0 + a0 <= c * n0: # n0을 넣었을 때 성립하면 n1, n2... ninf는 전부 성립함
    print(1) # 조금만 생각을 해보면 알 수 있다. 저게 만족하는 조건이면 n이 커질 때 좌변보다 우변이 더 빠르게 커진다.
else:
    print(0)

# a가 0 이하인 경우?
# 무조건 성립한다. 좌변이 0 또는 음수인데 우변은 무조건 양수가 나오니까.
'''
# 바보같은 실수. 저기서 if가 만족해도 a1 > c일 수 있다.

a1, a0 = map(int, input().split())
c = int(input())
n0 = int(input())

# if a1 > c: # 이게 else에 포함된다고 해서 a1 <= c 가 if에 포함되는게 아니다.
#     print(0)
# if a1 == c and a0 == 0: # 이건 아래 조건에 포함됨.
#     print(1)
if a1 <= c and a1 * n0 + a0 <= c * n0:
    print(1)
else:
    print(0)

# a가 0 이하인 경우?
# 무조건 성립한다. 좌변이 0 또는 음수인데 우변은 무조건 양수가 나오니까.