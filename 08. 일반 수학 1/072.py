'''
문제
땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.

달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.

달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.

입력
첫째 줄에 세 정수 A, B, V가 공백으로 구분되어서 주어진다. (1 ≤ B < A ≤ V ≤ 1,000,000,000)

출력
첫째 줄에 달팽이가 나무 막대를 모두 올라가는데 며칠이 걸리는지 출력한다.

예제 입력 1 
2 1 5
예제 출력 1 
4
예제 입력 2 
5 1 6
예제 출력 2 
2
예제 입력 3 
100 99 1000000000
예제 출력 3 
999999901
'''
'''
A_m, B_m, V_len = map(int, input().split())

current = A_m
day = 1
while current < V_len:
    current += (- B_m + A_m)
    day += 1

print(day)
'''
# 너무 너무 오래 걸린다. 다른 방법을 찾아야 해.
'''
import math

A_m, B_m, V_len = map(int, input().split())

# A_m + x*(A_m - B_m) = V_len 이 식에서 x를 구하려면
day = (V_len - A_m) / (A_m - B_m)
# 근데 이러면 day가 딱 떨어지지 않는데.. 나머지가 생기면 올림처리 해버려야 하겠다.
# int는 단순히 소수점 아래를 지우니까 안되고, round는 반올림이고, 그러면? import math?

print(math.ceil(day + 1))
# math.ceil()은 올림, math.floor()는 내림.
# int()는 소수점 아래를 그냥 지움.
# round()는 반올림.
'''
# 근데, math를 꼭 써야할까?

A_m, B_m, V_len = map(int, input().split())
# 올림(x / y) == 내림(x − 1 / y) + 1
# //은 사실상 내림의 역할을 하니까, 공식에 맞춰 변환하면?
print((V_len - A_m - 1) // (A_m - B_m) + 2)
# print((((V_len - A_m) - 1) // (A_m - B_m) + 1) + 1)
# (V_len - A_m): 마지막 날 전까지 올라가야 할 거리
# -1: 올림 대신 정수 연산을 위해 1 빼줌
# // (A_m - B_m): 하루에 오르는 양으로 나눈 일수 (내림)
# +1: 올림 효과
# +1: 마지막 날 포함