'''
문제
영선이는 숫자가 쓰여 있는 직사각형 종이를 가지고 있다.
종이는 1×1 크기의 정사각형 칸으로 나누어져 있고, 숫자는 각 칸에 하나씩 쓰여 있다.
행은 위에서부터 아래까지 번호가 매겨져 있고, 열은 왼쪽부터 오른쪽까지 번호가 매겨져 있다.

영선이는 직사각형을 겹치지 않는 조각으로 자르려고 한다.
각 조각은 크기가 세로나 가로 크기가 1인 직사각형 모양이다.
길이가 N인 조각은 N자리 수로 나타낼 수 있다.
가로 조각은 왼쪽부터 오른쪽까지 수를 이어 붙인 것이고, 세로 조각은 위에서부터 아래까지 수를 이어붙인 것이다.

아래 그림은 4×4 크기의 종이를 자른 한 가지 방법이다.
각 조각의 합은 493 + 7160 + 23 + 58 + 9 + 45 + 91 = 7879 이다.
종이를 적절히 잘라서 조각의 합을 최대로 하는 프로그램을 작성하시오.

입력
첫째 줄에 종이 조각의 세로 크기 N과 가로 크기 M이 주어진다. (1 ≤ N, M ≤ 4)

둘째 줄부터 종이 조각이 주어진다. 각 칸에 쓰여 있는 숫자는 0부터 9까지 중 하나이다.

출력
영선이가 얻을 수 있는 점수의 최댓값을 출력한다.

예제 입력 1 
2 3
123
312
예제 출력 1 
435
예제 입력 2 
2 2
99
11
예제 출력 2 
182
예제 입력 3 
4 3
001
010
111
100
예제 출력 3 
1131
예제 입력 4 
1 1
8
예제 출력 4 
8
'''
# 가로로 이어지는 숫자거나
# 세로로 이어지는 숫자거나 둘 중 하나.
# 네모 경계선에서 =를 남길지, ||를 남길지.

# 그럼 비트마스크로 표현할 수 있겠구나.

N, M = map(int, input().split())
board = [list(map(int, list(input()))) for _ in range(N)]

max_total = 0

# 숫자칸이 가로면 1, 세로면 0을 저장. 모든 경우를 순회한다.
for mask in range(1 << (N * M)):
    total = 0

    # 가로(1)인 애들의 합을 일단 전부 구한다.
    for i in range(N): # 가로줄마다 끊어서 순회
        row_sum = 0
        for j in range(M):
            idx = i * M + j # mask의 인덱스에 맞춰 변주
            if mask & (1 << idx): # 이번 칸이 1일때
                row_sum = row_sum * 10 + board[i][j]
            else: # 0들은 세로합에서 계산됨.
                total += row_sum # 앞에서 계산한것을 total에 추가
                row_sum = 0 # 가로 연속 초기화
        total += row_sum # 가로줄이 전부 1일때 사용

    # 그리고 세로(0)인 애들의 합을 전부 구한다.
    for j in range(M): # 세로줄마다 끊어서 순회
        col_sum = 0
        for i in range(N):
            idx = i * M + j
            if not mask & (1 << idx): # 이번 칸이 0일때
                col_sum = col_sum * 10 + board[i][j]
            else: # 1들은 가로합에서 계산됨.
                total += col_sum # 앞에서 계산한것을 total에 추가
                col_sum = 0 # 세로 연속 초기화
        total += col_sum # 세로줄이 전부 0일때 사용

    # 최댓값으로 회차마다 갱신한다.
    max_total = max(max_total, total)

print(max_total)